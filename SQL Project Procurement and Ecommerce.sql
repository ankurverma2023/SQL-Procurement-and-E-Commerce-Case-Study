
--Project Title: Comprehensive SQL Operations and Data Analysis: Procurement and E-Commerce Case Study

CREATE DATABASE PE
USE PE

--Q1- How do you create a table with an identity column and a foreign key?

--Create Table Procurement
Create Table Procurement
(
ProcurementID INT IDENTITY(1,1) PRIMARY KEY,
SupplierName VARCHAR(100),
Product VARCHAR(100),
Quantity INT,
Cost DECIMAL(10,2),
OrderDate DATE,
)
--How do you insert data into the tables?
INSERT INTO Procurement VALUES('Amazon Supply','Laptop',100,50000.00,'2024-01-01'),
('Dell Supply','Desktop',200,100000.00,'2024-01-02'),
('HP Supply','Printer',150,75000.00,'2024-01-03'),
('Lenevo Supply','Monitor',250,125000.00,'2024-01-04'),
('Apple Supply','Tablet',300,150000.00,'2024-01-05'),
('Microsoft Supply','Keyboard',120,60000.00,'2024-01-06'),
('Acer Supply','Mouse',180,90000.00,'2024-01-07'),
('Asus Supply','Headphones',200,11000.00,'2024-01-08'),
('Samsung Supply','Smartphones',140,70000.00,'2024-01-09'),
('Sonny Supply','Camera',160,80000.00,'2024-01-10')

SELECT * FROM Procurement

-- Create Table Ecommerce
Create Table Ecommerce
(
OrderID INT IDENTITY(1,1) PRIMARY KEY,
CustomerName VARCHAR(100),
Product VARCHAR(100),
Quantity INT,
TotalPrice DECIMAL(10,2),
ProcurementID INT,
FOREIGN KEY (ProcurementID) REFERENCES Procurement(ProcurementID)
)
--How do you insert data into the tables?
INSERT INTO Ecommerce VALUES('John Doe','Laptop',2,100000.00,1),
('Jane Smith','Desktop',3,300000.00,2),
('Emily Davis','Printer',1,75000.00,3),
('Micheal Brown','Monitor',4,500000.00,4),
('Sarah Wilson','Tablet',5,750000.00,5),
('David Johnson','Keyboard',2,120000.00,6),
('Linda Martinez','Mouse',3,270000.00,7),
('Robert Miller','Headphones',4,440000.00,8),
('Mary Garcia','Smartphones',1,70000.00,9),
('James Martinez','Camera',2,160000.00,10)

SELECT * FROM Ecommerce

--Q2- How do you select all records from both tables?

SELECT * FROM Procurement
SELECT * FROM Ecommerce

--Q3- How do you perform a JOIN between the two tables to get a combined result?

SELECT
     e.OrderID, e.CustomerName, e.Product, e.Quantity, e.TotalPrice,
     p.SupplierName, p.Cost, p.OrderDate
FROM
    Ecommerce e
JOIN
Procurement P ON e.procurementID = p.ProcurementID

--Q4- How do you find the total quantity of products ordered by each supplier?

SELECT
     p.SupplierName, SUM(e.Quantity) AS TotalQuantity
FROM
   Procurement p
JOIN
    Ecommerce e ON p.ProcurementID = e.ProcurementID
GROUP BY
    P.SupplierName

--Q5- How do you update a record in the Procurement table?

UPDATE Procurement
SET Quantity = 150
WHERE ProcurementID = 1

--Q6- How do you delete a record from the ECommerce table?

DELETE FROM Ecommerce
WHERE OrderID = 1

--Q7- How do you find the average cost of products in the Procurement table?

SELECT AVG(Cost) AS AverageCost
FROM Procurement

--Q8- How do you retrieve records from the Procurement table that have a quantity greater than 150?

SELECT * FROM Procurement
WHERE Quantity > 150

--Q9- How do you add a new column to the ECommerce table?

ALTER TABLE Ecommerce
ADD DeliveryDate Date

SELECT * FROM Ecommerce

--Q10- How do you find the total cost for each product in the Procurement table?

SELECT Product, SUM(Cost * Quantity) AS TotalCost
FROM Procurement
GROUP BY Product

--Q11- How do you find the number of orders placed by each customer?

SELECT CustomerName, COUNT(OrderID) AS NumberofOrders
FROM Ecommerce
GROUP BY CustomerName

--Q12- How do you find the products that have not been ordered?

SELECT p.Product
FROM Procurement p
LEFT JOIN Ecommerce e ON p.Product = e.Product
WHERE e.Product IS NULL

--Q13- How do you find the total sales amount for each customer?

SELECT CustomerName, SUM(TotalPrice) AS TotalSales
FROM Ecommerce
GROUP BY CustomerName

--Q14- How do you find the most ordered product?

SELECT TOP 1
     Product, SUM(Quantity) AS TotalOrdered
FROM 
    Ecommerce
GROUP BY 
    Product
ORDER BY 
    TotalOrdered DESC

--Q15- How do you find the most expensive product in the Procurement table?

SELECT TOP 1
     PRODUCT, Cost
FROM 
   Procurement
ORDER BY
   Cost DESC

--Q16- How do you find the supplier who supplied the maximum quantity of products?

SELECT SupplierName, SUM(Quantity) AS TotalSupplied
FROM Procurement
GROUP BY SupplierName
ORDER BY TotalSupplied DESC

--Q17- How do you find the total revenue generated by each product?

SELECT PRODUCT, SUM(TotalPrice) AS TotalRevenue
FROM Ecommerce
Group by Product

--Q18- How do you find the date of the first order placed?

SELECT MIN(OrderDATE) AS FirstOrderDate
FROM Procurement

--Q19- How do you find the products that have been ordered more than once by the same customer?

SELECT CustomerName, Product, COUNT(*) AS NumberofOrders
FROM Ecommerce
GROUP BY CustomerName, Product

-- Joins Queries
--1- Inner Joins
--Retrieving combined data from both tables where there are matching ProcurementID values.

SELECT
     e.OrderID, e.CustomerName, e.product, e.Quantity, e.TotalPrice,
     p.SupplierName, p.Cost, p.OrderDate
FROM
    Ecommerce e
join
    Procurement p ON e.procurementID = P.ProcurementID

--2- Left Join
--Retrieving all records from the ECommerce table and matching records from the Procurement table. If there is no match, 
--NULL values will be returned for columns from the Procurement table.

SELECT
     e.OrderID, e.CustomerName, e.product, e.Quantity, e.TotalPrice,
     p.SupplierName, p.Cost, p.OrderDate
FROM
    Ecommerce e
Left join
    Procurement p ON e.procurementID = P.ProcurementID

--3- Right Join
--Retrieving all records from the Procurement table and matching records from the ECommerce table. If there is no match, 
--NULL values will be returned for columns from the ECommerce table.

SELECT
     e.OrderID, e.CustomerName, e.product, e.Quantity, e.TotalPrice,
     p.SupplierName, p.Cost, p.OrderDate
FROM
    Ecommerce e
Right join
    Procurement p ON e.procurementID = P.ProcurementID

--4- Full Outer Join
--Retrieving all records when there is a match in either table. If there is no match, NULL values will be returned for columns 
--from the other table.

SELECT
     e.OrderID, e.CustomerName, e.product, e.Quantity, e.TotalPrice,
     p.SupplierName, p.Cost, p.OrderDate
FROM
    Ecommerce e
Full Outer join
    Procurement p ON e.procurementID = P.ProcurementID

-- Cross JOin to Analyze Procurement and Ecommerce Products
-- This query pairs each product from Procurement with every product from Ecommerce to analyze their combinations.

SELECT
    p.Product AS ProcurementProduct,
    e.Product AS EcommerceProduct
FROM
    Procurement p
CROSS JOIN
    Ecommerce e

-- Cross Join Between Procurement and Ecommerce
-- This query combines every row in the Procurement table with every row in the Ecommerce table.

SELECT
    p.ProcurementID, p.SupplierName, p.Product AS ProcurementProduct, p.Quantity AS ProcurementQuantity, p.Cost, p.OrderDate,
    e.OrderID, e.CustomerName, e.Product AS EcommerceProduct, e.Quantity AS EcommerceQuantity, e.TotalPrice
FROM
    Procurement p
CROSS JOIN
    Ecommerce e

-- Union All Queries
--Combining results of two SELECT statements including duplicates.

SELECT
SupplierName AS Name, PRODUCT, Quantity, Cost AS Price
FROM
Procurement
UNION ALL
SELECT
CustomerName AS Name, PRODUCT, Quantity, TotalPrice AS Price
FROM
Ecommerce

--Q- Updating NULL Values
-- Updating the new DeliveryDate column to replace NULL values with a specific date.

UPDATE Ecommerce
SET DeliveryDate = '2024-01-15'
WHERE DeliveryDate IS NULL;

DELETE FROM Ecommerce
WHERE DeliveryDate = '2024-01-15'

SELECT * FROM Ecommerce

Drop Table Ecommerce

-- SubQueries Example
-- Subquery to Find Customers Who Ordered a Specific Product

SELECT CustomerName
FROM Ecommerce
WHERE PRODUCT = 'Laptop'

--Subquery to Calculate Average Quantity Ordered

SELECT AVG(Quantity) AS AvgQuantityOrdered
FROM Ecommerce
WHERE CustomerName IN(
     SELECT CustomerName
	 FROM Ecommerce
	 WHERE Product = 'Desktop'
)

--Trigger Queries
--An SQL trigger allows you to specify SQL actions that should be executed automatically when a,
--specific event occurs in the database.

CREATE TRIGGER UpdateProcurementAfterInsert
ON Ecommerce
AFTER INSERT
AS
BEGIN
    DECLARE @ProcurementID INT

	SELECT @ProcurementID = inserted.ProcurementID
	FROM inserted

	UPDATE Procurement
	SET Quantity = Quantity - (SELECT Quantity from inserted WHERE ProcurementID = @ProcurementID)
	WHERE ProcurementID = @ProcurementID
END	

--Procedure Queries
--A stored procedure is a prepared SQL code that you can save, so the code can be reused over and over again.

CREATE PROCEDURE GetOrderDetailsByCustomer
  @CustomerName VARCHAR(100)
AS
BEGIN
     SELECT
	     OrderID, CustomerName, Product, Quantity, TotalPrice
	  FROM
	     Ecommerce
	  WHERE
	     CustomerName = @CustomerName
END

EXEC GetOrderDetailsByCustomer 'John Doe'

--Schema Binding Queries

CREATE VIEW dbo.CustomerOrderSummary
WITH SCHEMABINDING
AS
SELECT
    CustomerName, SUM(TotalPrice) AS TotalSpent
FROM
   dbo.Ecommerce
GROUP BY
   CustomerName;

SELECT * FROM DBO.CustomerOrderSummary